substitutions:
  name: garage
  id_prefix: ${name}_
  label: Garage
  device_ip: 192.168.1.81

esphome:
  name: ${name}
  platform: ESP32
  board: nodemcu-32s
  includes:
  - _BLEDevice.h
  on_boot:
    priority: -800
    then:
    - lambda: |-
            BLEDevice::setPower(ESP_PWR_LVL_P9);

<<: !include .shared.yaml

esp32_ble_tracker:
  scan_parameters:
    interval: 150ms
    window: 150ms

binary_sensor:
- platform: gpio
  pin: 
    number: 22
  id: open_sensor
- platform: gpio
  pin: 
    number: 23
  id: closed_sensor
# Detect when the M3 bluetooth is on and within range
- id: ${id_prefix}m3_ble_presence
  platform: ble_presence
  mac_address: !secret m3_ble
  name: ${label} M3 BLE Presence
  # Open the garage when the bluetooth signal is detected
  #  on_press:
  #  - cover.open: ${id_prefix}cover
  # Close the garage when the bluetooth signal is lost
  #  on_release:
  #  - delay: 30s
  #  - cover.close: ${id_prefix}cover
#- id: open_sensor
#  platform: template
#  lambda: |-
#    if(id(us_sensor).state < 0.2) {
#      return true;
#    }
#    else { 
#      return false;
#    }

switch:
- platform: gpio
  pin: 15
  id: open_switch

sensor:
- id: m3_rssi
  platform: ble_rssi
  mac_address: !secret m3_ble
  internal: true
#- id: us_sensor
#  platform: ultrasonic
#  trigger_pin: 14
#  echo_pin: 13
#  update_interval: 2s

cover:
- id: ${id_prefix}cover
  platform: template
  name: ${label}
  lambda: |-
    if(id(open_sensor).state) {
      return COVER_OPEN;
    }
    else { 
      return COVER_CLOSED;
    }
  open_action:
  - if:
      condition:
        binary_sensor.is_on: closed_sensor
      then: 
      - switch.turn_on: open_switch
      - delay: 200ms
      - switch.turn_off: open_switch
  close_action:
  - if:
      condition:
        binary_sensor.is_on: open_sensor
      then: 
      - switch.turn_on: open_switch
      - delay: 200ms
      - switch.turn_off: open_switch
  stop_action:
  - switch.turn_on: open_switch
  - delay: 200ms
  - switch.turn_off: open_switch
