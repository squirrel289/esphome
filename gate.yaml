# Wireless controller for LiftMaster Gate Operator LA400
esphome:
  name: ${name}
  platform: ESP32
  board: nodemcu-32s
  includes:
  - _BLEDevice.h
  on_boot:
    priority: -800
    then:
    - lambda: |-
            BLEDevice::setPower(ESP_PWR_LVL_P9);

substitutions:
  name: gate
  id_prefix: ${name}_
  name_txt: Gate
  device_ip: 192.168.1.82

<<: !include .shared.yaml

esp32_ble_tracker:
  scan_interval: 30s

switch:
- id: ${id_prefix}reset_switch
  platform: gpio
  pin: 15
  name: ${name_txt} Reset Switch
  
- id: ${id_prefix}stop_switch
  platform: gpio
  pin: 16
  name: ${name_txt} Stop Switch
  
- id: ${id_prefix}open_switch
  name: "${name_txt} Open Switch"
  pin: 
    number: 32
    inverted: true
  platform: gpio
  
- id: ${id_prefix}sbc_switch
  platform: gpio
  pin: 
    number: 33
    inverted: true
  name: ${name_txt} SBC Switch

- id: ${id_prefix}party_mode
  platform: template
  name: Hold Open
  on_turn_on:
  - switch.turn_on: ${id_prefix}open_switch
  - wait_until:
      binary_sensor.is_on: ${id_prefix}open_sensor
  - switch.turn_off: ${id_prefix}open_switch
  - binary_sensor.template.publish: 
      id: ${id_prefix}reset_button
      state: ON
  - binary_sensor.template.publish:
      id: ${id_prefix}reset_button
      state: OFF
  on_turn_off:
  - switch.turn_on: ${id_prefix}sbc_switch
  - delay: 500ms
  - switch.turn_off: ${id_prefix}sbc_switch

binary_sensor:
# Detect when the Odyssey bluetooth is on and within range
- id: odyssey
  platform: ble_presence
  mac_address: !secret odyssey_ble
  name: Odyssey
  # Open the gate when the bluetooth signal is detected
  on_press:
  - switch.turn_on: ${id_prefix}open_switch
  # Close the gate when the bluetooth signal is lost
  on_release:
  - switch.turn_off: ${id_prefix}open_switch

# Detect when the M3 bluetooth is on and within range
- id: m3
  platform: ble_presence
  mac_address: !secret m3_ble
  name: M3
  # Open the gate when the bluetooth signal is detected
  on_press:
  - switch.turn_on: ${id_prefix}open_switch
  # Close the gate when the bluetooth signal is lost
  on_release:
  - switch.turn_off: ${id_prefix}open_switch

- id: ${id_prefix}open_sensor
  pin: 26
  name: "${name_txt} Open Sensor"
  platform: gpio
  internal: true
  device_class: door

- id: ${id_prefix}closed_sensor
  pin: 25
  name: "${name_txt} Closed Sensor"
  platform: gpio
  internal: true

# Detects if alarm is triggered
- id: ${id_prefix}alarm_sensor
  pin: 4
  name: ${name_txt} Alarm
  platform: gpio
  internal: true

- id: ${id_prefix}reset_button
  platform: template
  internal: true
  on_press:
  - switch.turn_on: ${id_prefix}reset_switch
  - delay: 100ms
  - switch.turn_off: ${id_prefix}reset_switch

# Use input to determine if right gate arm is opening
- id: ${id_prefix}right_opening_sensor
  platform: gpio
  pin:
    number: 13
#    inverted: true
  internal: true

# Use input to determine if right gate arm is closing
- id: ${id_prefix}right_closing_sensor
  platform: gpio
  pin:
    number: 12
#    inverted: true
  internal: true

# Use input to determine if left gate arm is opening
- id: ${id_prefix}left_opening_sensor
  platform: gpio
  pin:
    number: 14
#    inverted: true
  internal: true

# Use input to determine if left gate arm is closing
- id: ${id_prefix}left_closing_sensor
  platform: gpio
  pin:
    number: 27
#    inverted: true
  internal: true

sensor:
- id: odyssey_rssi
  platform: ble_rssi
  mac_address: !secret odyssey_ble
  internal: true

- id: m3_rssi
  platform: ble_rssi
  mac_address: !secret m3_ble
  internal: true

- id: ${id_prefix}right_movement_sensor
  platform: template
  internal: true
  lambda: |-
      if ( id(${id_prefix}right_opening_sensor).state ) 
        return 1;
      else if ( id(${id_prefix}right_closing_sensor).state )
        return -1;
      else
        return 0;
  on_value:
  - then:
    - cover.template.publish:
        id: ${id_prefix}cover
        current_operation: !lambda |-
          if (id(${id_prefix}right_closing_sensor).state)
            return COVER_OPERATION_CLOSING;
          else if (id(${id_prefix}right_opening_sensor).state)
            return COVER_OPERATION_OPENING;
          else
            return COVER_OPERATION_IDLE;

- id: ${id_prefix}left_movement_sensor
  platform: template
  internal: true
  lambda: |-
    if(id(${id_prefix}left_opening_sensor).state) 
      return 1;
    else if(id(${id_prefix}left_closing_sensor).state )
      return -1;
    else
      return 0;

- id: ${id_prefix}movement_sensor
  platform: template
  internal: true
  lambda: |-
    if (id(${id_prefix}left_movement_sensor).state +
      id(${id_prefix}right_movement_sensor).state < 0)
      return -1;
    else if (id(${id_prefix}left_movement_sensor).state + 
      id(${id_prefix}right_movement_sensor).state > 0)
      return 1;
    else
      return 0;
  on_value:
  - then:
    - cover.template.publish:
        id: ${id_prefix}cover
        current_operation: !lambda |-
          if (x < 0)
            return COVER_OPERATION_CLOSING;
          else if (x > 0)
            return COVER_OPERATION_OPENING;
          else
            return COVER_OPERATION_IDLE;

cover:
- id: ${id_prefix}cover
  platform: template
  name: ${name_txt}
  lambda: |-
    if(id(${id_prefix}open_sensor).state) {
      return COVER_OPEN;
    }
    else if(id(${id_prefix}closed_sensor).state) {
      return COVER_CLOSED;
    }
    else {
      return {};
    }
  optimistic: true
  open_action:
  - switch.turn_on: ${id_prefix}open_switch
  close_action:
  - switch.turn_off: ${id_prefix}open_switch
